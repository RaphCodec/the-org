/*! tailwindcss v4.0.8 | MIT License | https://tailwindcss.com */
.pointer-events-none {
  pointer-events: none;
}
.collapse {
  visibility: collapse;
}
.invisible {
  visibility: hidden;
}
.visible {
  visibility: visible;
}
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}
.absolute {
  position: absolute;
}
.fixed {
  position: fixed;
}
.relative {
  position: relative;
}
.static {
  position: static;
}
.bottom-\[60px\] {
  bottom: 60px;
}
.-z-10 {
  z-index: calc(10 * -1);
}
.z-0 {
  z-index: 0;
}
.z-10 {
  z-index: 10;
}
.z-20 {
  z-index: 20;
}
.z-30 {
  z-index: 30;
}
.z-40 {
  z-index: 40;
}
.z-50 {
  z-index: 50;
}
.container {
  width: 100%;
}
.mx-auto {
  margin-inline: auto;
}
.ms-auto {
  margin-inline-start: auto;
}
.ml-auto {
  margin-left: auto;
}
.block {
  display: block;
}
.flex {
  display: flex;
}
.grid {
  display: grid;
}
.hidden {
  display: none;
}
.inline {
  display: inline;
}
.inline-block {
  display: inline-block;
}
.inline-flex {
  display: inline-flex;
}
.table {
  display: table;
}
.h-\[calc\(100\%-1rem\)\] {
  height: calc(100% - 1rem);
}
.h-auto {
  height: auto;
}
.h-full {
  height: 100%;
}
.h-screen {
  height: 100vh;
}
.max-h-full {
  max-height: 100%;
}
.w-1\/2 {
  width: calc(1/2 * 100%);
}
.w-full {
  width: 100%;
}
.flex-1 {
  flex: 1;
}
.flex-shrink {
  flex-shrink: 1;
}
.flex-shrink-0 {
  flex-shrink: 0;
}
.shrink-0 {
  flex-shrink: 0;
}
.origin-\[0\] {
  transform-origin: 0;
}
.-translate-x-full {
  --tw-translate-x: -100%;
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
.translate-x-full {
  --tw-translate-x: 100%;
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
.-translate-y-full {
  --tw-translate-y: -100%;
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
.translate-y-full {
  --tw-translate-y: 100%;
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
.scale-75 {
  --tw-scale-x: 75%;
  --tw-scale-y: 75%;
  --tw-scale-z: 75%;
  scale: var(--tw-scale-x) var(--tw-scale-y);
}
.rotate-180 {
  rotate: 180deg;
}
.transform {
  transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
}
.transform-none {
  transform: none;
}
.cursor-default {
  cursor: default;
}
.cursor-not-allowed {
  cursor: not-allowed;
}
.cursor-pointer {
  cursor: pointer;
}
.resize {
  resize: both;
}
.list-none {
  list-style-type: none;
}
.appearance-none {
  appearance: none;
}
.grid-cols-4 {
  grid-template-columns: repeat(4, minmax(0, 1fr));
}
.grid-cols-7 {
  grid-template-columns: repeat(7, minmax(0, 1fr));
}
.flex-wrap {
  flex-wrap: wrap;
}
.items-center {
  align-items: center;
}
.items-end {
  align-items: flex-end;
}
.items-start {
  align-items: flex-start;
}
.justify-between {
  justify-content: space-between;
}
.justify-center {
  justify-content: center;
}
.justify-end {
  justify-content: flex-end;
}
.justify-start {
  justify-content: flex-start;
}
.divide-y {
  :where(& > :not(:last-child)) {
    --tw-divide-y-reverse: 0;
    border-bottom-style: var(--tw-border-style);
    border-top-style: var(--tw-border-style);
    border-top-width: calc(1px * var(--tw-divide-y-reverse));
    border-bottom-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
  }
}
.divide-gray-100 {
  :where(& > :not(:last-child)) {
    border-color: var(--color-gray-100);
  }
}
.self-center {
  align-self: center;
}
.overflow-hidden {
  overflow: hidden;
}
.overflow-x-hidden {
  overflow-x: hidden;
}
.overflow-y-auto {
  overflow-y: auto;
}
.rounded-full {
  border-radius: calc(infinity * 1px);
}
.border {
  border-style: var(--tw-border-style);
  border-width: 1px;
}
.border-0 {
  border-style: var(--tw-border-style);
  border-width: 0px;
}
.border-t {
  border-top-style: var(--tw-border-style);
  border-top-width: 1px;
}
.border-r {
  border-right-style: var(--tw-border-style);
  border-right-width: 1px;
}
.border-b {
  border-bottom-style: var(--tw-border-style);
  border-bottom-width: 1px;
}
.border-b-2 {
  border-bottom-style: var(--tw-border-style);
  border-bottom-width: 2px;
}
.border-blue-600 {
  border-color: var(--color-blue-600);
}
.border-blue-700 {
  border-color: var(--color-blue-700);
}
.border-gray-100 {
  border-color: var(--color-gray-100);
}
.border-gray-200 {
  border-color: var(--color-gray-200);
}
.border-gray-300 {
  border-color: var(--color-gray-300);
}
.bg-blue-700 {
  background-color: var(--color-blue-700);
}
.bg-gray-50 {
  background-color: var(--color-gray-50);
}
.bg-gray-100 {
  background-color: var(--color-gray-100);
}
.bg-gray-200 {
  background-color: var(--color-gray-200);
}
.bg-gray-900 {
  background-color: var(--color-gray-900);
}
.bg-gray-900\/50 {
  background-color: color-mix(in oklab, var(--color-gray-900) 50%, transparent);
}
.bg-red-50 {
  background-color: var(--color-red-50);
}
.bg-transparent {
  background-color: transparent;
}
.bg-white {
  background-color: var(--color-white);
}
.bg-white\/50 {
  background-color: color-mix(in oklab, var(--color-white) 50%, transparent);
}
.text-center {
  text-align: center;
}
.text-left {
  text-align: left;
}
.whitespace-nowrap {
  white-space: nowrap;
}
.text-blue-600 {
  color: var(--color-blue-600);
}
.text-gray-400 {
  color: var(--color-gray-400);
}
.text-gray-500 {
  color: var(--color-gray-500);
}
.text-gray-600 {
  color: var(--color-gray-600);
}
.text-gray-700 {
  color: var(--color-gray-700);
}
.text-gray-800 {
  color: var(--color-gray-800);
}
.text-gray-900 {
  color: var(--color-gray-900);
}
.text-red-500 {
  color: var(--color-red-500);
}
.text-red-800 {
  color: var(--color-red-800);
}
.text-white {
  color: var(--color-white);
}
.uppercase {
  text-transform: uppercase;
}
.antialiased {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
.opacity-0 {
  opacity: 0%;
}
.opacity-100 {
  opacity: 100%;
}
.outline {
  outline-style: var(--tw-outline-style);
  outline-width: 1px;
}
.filter {
  filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
}
.backdrop-filter {
  -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
}
.transition {
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.transition-opacity {
  transition-property: opacity;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.transition-transform {
  transition-property: transform, translate, scale, rotate;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.duration-75 {
  --tw-duration: 75ms;
  transition-duration: 75ms;
}
.duration-300 {
  --tw-duration: 300ms;
  transition-duration: 300ms;
}
.group-hover\:text-gray-900 {
  &:is(:where(.group):hover *) {
    @media (hover: hover) {
      color: var(--color-gray-900);
    }
  }
}
.peer-placeholder-shown\:scale-100 {
  &:is(:where(.peer):placeholder-shown ~ *) {
    --tw-scale-x: 100%;
    --tw-scale-y: 100%;
    --tw-scale-z: 100%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
}
.peer-focus\:scale-75 {
  &:is(:where(.peer):focus ~ *) {
    --tw-scale-x: 75%;
    --tw-scale-y: 75%;
    --tw-scale-z: 75%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
}
.peer-focus\:text-blue-600 {
  &:is(:where(.peer):focus ~ *) {
    color: var(--color-blue-600);
  }
}
.hover\:border-gray-300 {
  &:hover {
    @media (hover: hover) {
      border-color: var(--color-gray-300);
    }
  }
}
.hover\:bg-blue-800 {
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-blue-800);
    }
  }
}
.hover\:bg-gray-100 {
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-gray-100);
    }
  }
}
.hover\:bg-gray-200 {
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-gray-200);
    }
  }
}
.hover\:bg-red-200 {
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-red-200);
    }
  }
}
.hover\:bg-white {
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-white);
    }
  }
}
.hover\:text-blue-600 {
  &:hover {
    @media (hover: hover) {
      color: var(--color-blue-600);
    }
  }
}
.hover\:text-gray-600 {
  &:hover {
    @media (hover: hover) {
      color: var(--color-gray-600);
    }
  }
}
.hover\:text-gray-900 {
  &:hover {
    @media (hover: hover) {
      color: var(--color-gray-900);
    }
  }
}
.focus\:z-10 {
  &:focus {
    z-index: 10;
  }
}
.focus\:border-blue-600 {
  &:focus {
    border-color: var(--color-blue-600);
  }
}
.focus\:bg-gray-100 {
  &:focus {
    background-color: var(--color-gray-100);
  }
}
.focus\:ring-0 {
  &:focus {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
}
.focus\:ring-2 {
  &:focus {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
}
.focus\:ring-4 {
  &:focus {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
}
.focus\:ring-blue-300 {
  &:focus {
    --tw-ring-color: var(--color-blue-300);
  }
}
.focus\:ring-gray-100 {
  &:focus {
    --tw-ring-color: var(--color-gray-100);
  }
}
.focus\:ring-gray-200 {
  &:focus {
    --tw-ring-color: var(--color-gray-200);
  }
}
.focus\:ring-gray-300 {
  &:focus {
    --tw-ring-color: var(--color-gray-300);
  }
}
.focus\:ring-red-400 {
  &:focus {
    --tw-ring-color: var(--color-red-400);
  }
}
.focus\:outline-none {
  &:focus {
    --tw-outline-style: none;
    outline-style: none;
  }
}
.rtl\:rotate-180 {
  &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
    rotate: 180deg;
  }
}
.rtl\:space-x-reverse {
  &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 1;
    }
  }
}
.rtl\:peer-focus\:left-auto {
  &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
    &:is(:where(.peer):focus ~ *) {
      left: auto;
    }
  }
}
.rtl\:peer-focus\:translate-x-1\/4 {
  &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
    &:is(:where(.peer):focus ~ *) {
      --tw-translate-x: calc(1/4 * 100%);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
}
.dark\:border-blue-500 {
  @media (prefers-color-scheme: dark) {
    border-color: var(--color-blue-500);
  }
}
.dark\:border-gray-500 {
  @media (prefers-color-scheme: dark) {
    border-color: var(--color-gray-500);
  }
}
.dark\:border-gray-600 {
  @media (prefers-color-scheme: dark) {
    border-color: var(--color-gray-600);
  }
}
.dark\:border-gray-700 {
  @media (prefers-color-scheme: dark) {
    border-color: var(--color-gray-700);
  }
}
.dark\:border-transparent {
  @media (prefers-color-scheme: dark) {
    border-color: transparent;
  }
}
.dark\:bg-blue-600 {
  @media (prefers-color-scheme: dark) {
    background-color: var(--color-blue-600);
  }
}
.dark\:bg-gray-600 {
  @media (prefers-color-scheme: dark) {
    background-color: var(--color-gray-600);
  }
}
.dark\:bg-gray-700 {
  @media (prefers-color-scheme: dark) {
    background-color: var(--color-gray-700);
  }
}
.dark\:bg-gray-800 {
  @media (prefers-color-scheme: dark) {
    background-color: var(--color-gray-800);
  }
}
.dark\:bg-gray-800\/50 {
  @media (prefers-color-scheme: dark) {
    background-color: color-mix(in oklab, var(--color-gray-800) 50%, transparent);
  }
}
.dark\:bg-gray-900 {
  @media (prefers-color-scheme: dark) {
    background-color: var(--color-gray-900);
  }
}
.dark\:bg-gray-900\/80 {
  @media (prefers-color-scheme: dark) {
    background-color: color-mix(in oklab, var(--color-gray-900) 80%, transparent);
  }
}
.dark\:text-blue-500 {
  @media (prefers-color-scheme: dark) {
    color: var(--color-blue-500);
  }
}
.dark\:text-gray-300 {
  @media (prefers-color-scheme: dark) {
    color: var(--color-gray-300);
  }
}
.dark\:text-gray-400 {
  @media (prefers-color-scheme: dark) {
    color: var(--color-gray-400);
  }
}
.dark\:text-gray-500 {
  @media (prefers-color-scheme: dark) {
    color: var(--color-gray-500);
  }
}
.dark\:text-red-400 {
  @media (prefers-color-scheme: dark) {
    color: var(--color-red-400);
  }
}
.dark\:text-white {
  @media (prefers-color-scheme: dark) {
    color: var(--color-white);
  }
}
.dark\:placeholder-gray-400 {
  @media (prefers-color-scheme: dark) {
    &::placeholder {
      color: var(--color-gray-400);
    }
  }
}
.dark\:group-hover\:text-white {
  @media (prefers-color-scheme: dark) {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        color: var(--color-white);
      }
    }
  }
}
.peer-focus\:dark\:text-blue-500 {
  &:is(:where(.peer):focus ~ *) {
    @media (prefers-color-scheme: dark) {
      color: var(--color-blue-500);
    }
  }
}
.dark\:hover\:bg-blue-700 {
  @media (prefers-color-scheme: dark) {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-blue-700);
      }
    }
  }
}
.dark\:hover\:bg-gray-600 {
  @media (prefers-color-scheme: dark) {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-600);
      }
    }
  }
}
.dark\:hover\:bg-gray-700 {
  @media (prefers-color-scheme: dark) {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-700);
      }
    }
  }
}
.dark\:hover\:bg-gray-800 {
  @media (prefers-color-scheme: dark) {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-800);
      }
    }
  }
}
.dark\:hover\:text-blue-500 {
  @media (prefers-color-scheme: dark) {
    &:hover {
      @media (hover: hover) {
        color: var(--color-blue-500);
      }
    }
  }
}
.dark\:hover\:text-gray-300 {
  @media (prefers-color-scheme: dark) {
    &:hover {
      @media (hover: hover) {
        color: var(--color-gray-300);
      }
    }
  }
}
.dark\:hover\:text-white {
  @media (prefers-color-scheme: dark) {
    &:hover {
      @media (hover: hover) {
        color: var(--color-white);
      }
    }
  }
}
.dark\:focus\:border-blue-500 {
  @media (prefers-color-scheme: dark) {
    &:focus {
      border-color: var(--color-blue-500);
    }
  }
}
.dark\:focus\:bg-gray-700 {
  @media (prefers-color-scheme: dark) {
    &:focus {
      background-color: var(--color-gray-700);
    }
  }
}
.dark\:focus\:ring-blue-800 {
  @media (prefers-color-scheme: dark) {
    &:focus {
      --tw-ring-color: var(--color-blue-800);
    }
  }
}
.dark\:focus\:ring-gray-600 {
  @media (prefers-color-scheme: dark) {
    &:focus {
      --tw-ring-color: var(--color-gray-600);
    }
  }
}
.dark\:focus\:ring-gray-700 {
  @media (prefers-color-scheme: dark) {
    &:focus {
      --tw-ring-color: var(--color-gray-700);
    }
  }
}
:root, :host {
  --color-white: #ffffff;
  --color-gray-50: #F9FAFB;
  --color-gray-100: #F3F4F6;
  --color-gray-200: #E5E7EB;
  --color-gray-300: #D1D5DB;
  --color-gray-400: #9CA3AF;
  --color-gray-500: #6B7280;
  --color-gray-600: #4B5563;
  --color-gray-700: #374151;
  --color-gray-800: #1F2937;
  --color-gray-900: #111827;
  --color-red-50: #FEF2F2;
  --color-red-200: #FECACA;
  --color-red-400: #F87171;
  --color-red-500: #EF4444;
  --color-red-800: #991B1B;
  --color-blue-300: #93C5FD;
  --color-blue-500: #3B82F6;
  --color-blue-600: #2563EB;
  --color-blue-700: #1D4ED8;
  --color-blue-800: #1E40AF;
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
  initial-value: rotateX(0);
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
  initial-value: rotateY(0);
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
  initial-value: rotateZ(0);
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
  initial-value: skewX(0);
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
  initial-value: skewY(0);
}
@property --tw-divide-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
